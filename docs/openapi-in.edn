{
 :openapi       "3.0.3"
 :info          {
                 :title          "Swagger Petstore - OpenAPI 3.0"
                 :version        "1.0.11"
                 :description    "This is a sample Pet Store Server based on the OpenAPI 3.0 specification."
                 :termsOfService "http://swagger.io/terms/"
                 :contact        {
                                  :email "apiteam@swagger.io"
                                  }
                 :license        {
                                  :name "Apache 2.0"
                                  :url  "http://www.apache.org/licenses/LICENSE-2.0.html"
                                  }
                 }
 :externalDocs  {
                 :description "Find out more about Swagger"
                 :url         "http://swagger.io"
                 }
 :servers       [{
                  :url "https://petstore3.swagger.io/api/v3"
                  }]

 :tags          [
                 {
                  :name         "pet"
                  :description  "everything about pets"
                  :externalDocs {
                                 :description "Find out more",
                                 :url         "http://swagger.io"
                                 }
                  }
                 ]
 :paths         {
                 "/pet" {
                         :put {
                               :tags        ["pet"]
                               :summary     "Update an existing pet"
                               :description "Update an existing pet by Id"
                               :operationId "updatePet"
                               :requestBody {
                                             :description "Update an existent pet in the store"
                                             :content     {
                                                           "application/json" {
                                                                               :schema {
                                                                                        :$ref "#/components/schemas/Pet"
                                                                                        }
                                                                               }
                                                           }
                                             }
                               :responses   {
                                             "200" {
                                                    :description "Successful operation"
                                                    :content     {
                                                                  "application/json" {
                                                                                      :schema {
                                                                                               :$ref "#/components/schemas/Pet"
                                                                                               }
                                                                                      }
                                                                  }
                                                    }
                                             "400" {
                                                    :description "Invalid ID supplied"
                                                    }
                                             "404" {
                                                    :description "Pet not found"
                                                    }
                                             "405" {
                                                    :description "Validation exception"
                                                    }
                                             }
                               }

                         }
                 }
 :components    {
                 :schemas {
                           "Category"    {
                                          :type       "object"
                                          :properties {
                                                       :id   {
                                                              :type    "integer"
                                                              :format  "int64"
                                                              :example 1
                                                              }
                                                       :name {
                                                              :type    "string"
                                                              :example "Dogs"
                                                              }
                                                       }
                                          }
                           "Tag"         {
                                          :type       "object"
                                          :properties {
                                                       :id   {
                                                              :type    "integer"
                                                              :format  "int64"
                                                              :example 1
                                                              }
                                                       :name {
                                                              :type "string"
                                                              }
                                                       }
                                          }

                           "Pet"         {
                                          :required   [:name :photoUrls]
                                          :type       "object"
                                          :properties {
                                                       :id        {
                                                                   :type    "integer"
                                                                   :format  "int64"
                                                                   :example 10
                                                                   }
                                                       :name      {
                                                                   :type    "string"
                                                                   :example "doggie"
                                                                   }
                                                       :category  {
                                                                   "$ref" "#/components/schemas/Category"
                                                                   }
                                                       :photoUrls {
                                                                   :type  "array"
                                                                   :xml   {
                                                                           :wrapped true
                                                                           }
                                                                   :items {
                                                                           :type "string"
                                                                           :xml  {
                                                                                  :name "photoUrl"
                                                                                  }
                                                                           }
                                                                   }
                                                       :status    {
                                                                   :type        "string"
                                                                   :description "pet status in the store"
                                                                   :enum        ["available" "pending" "sold"]
                                                                   }
                                                       }
                                          }
                           "ApiResponse" {
                                          :type       "object"
                                          :properties {
                                                       :code    {
                                                                 :type   "integer"
                                                                 :format "int32"
                                                                 }
                                                       :type    {
                                                                 :type "string"
                                                                 }
                                                       :message {
                                                                 :type "string"
                                                                 }
                                                       }
                                          :xml        {
                                                       :name "##default"
                                                       }
                                          }
                           }
                 :requestBodies {
                                 :Pet {
                                       :description "Pet object that needed to be added to the store"
                                       :content     {
                                                     "application/json" {
                                                                         :schema {
                                                                                  :$ref "#/components/schemas/Pet"
                                                                                  }
                                                                         }
                                                     }
                                       }
                                 }
                 }



 }